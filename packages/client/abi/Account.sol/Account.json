{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IAuthController",
              "name": "authController",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "client",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            },
            {
              "internalType": "contract ILimitCheckerSystem",
              "name": "limitChecker",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "limitData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IAccount.PermissionData",
          "name": "_permissionData",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "auth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_permissionId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_permissionId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "_returnData",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "permissionData",
      "outputs": [
        {
          "internalType": "contract IAuthController",
          "name": "authController",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "client",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        },
        {
          "internalType": "contract ILimitCheckerSystem",
          "name": "limitChecker",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "limitData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_permissionId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1767:1832:119:-:0;;;1973:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2011:5;:14;;-1:-1:-1;;;;;;2011:14:119;-1:-1:-1;;;;;2011:14:119;;;;;;;;;;1767:1832;;14:290:134;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:134;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:134:o;:::-;1767:1832:119;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100d2578063a6f9dae1146100fd578063fe4f707c1461011057600080fd5b80630998d8de1461007757806320c5429b1461009d57806359efcb15146100b2575b600080fd5b61008a61008536600461089f565b610134565b6040519081526020015b60405180910390f35b6100b06100ab366004610910565b610288565b005b6100c56100c0366004610929565b610367565b60405161009491906109b5565b6000546100e5906001600160a01b031681565b6040516001600160a01b039091168152602001610094565b6100b061010b3660046109e4565b610686565b61012361011e366004610910565b610735565b604051610094959493929190610a01565b60008061014460208601866109e4565b6000546040517fdcc2072e0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169263dcc2072e9261019492911690899089908990600401610ab9565b602060405180830381865afa1580156101b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d59190610b58565b90508061024e5760405162461bcd60e51b8152602060048201526024808201527f4163636f756e743a3a617574683a20696e76616c696420617574686f72697a6160448201527f72696f6e0000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6001805461025b91610b7a565b60018190556000818152600260205260409020909250859061027d8282610d4a565b905050509392505050565b6000546001600160a01b031633146103085760405162461bcd60e51b815260206004820152602660248201527f4163636f756e743a3a7265766f6b653a206f6e6c79206f776e65722063616e2060448201527f7265766f6b6500000000000000000000000000000000000000000000000000006064820152608401610245565b60008181526002602081905260408220805473ffffffffffffffffffffffffffffffffffffffff19908116825560018201805482169055918101805483169055600381018054909216909155906103626004830182610800565b505050565b6000838152600260208181526040808420815160a08101835281546001600160a01b039081168252600183015481169482019490945293810154831691840191909152600381015490911660608381019190915260048201805491949392916080840191906103d590610be8565b80601f016020809104026020016040519081016040528092919081815260200182805461040190610be8565b801561044e5780601f106104235761010080835404028352916020019161044e565b820191906000526020600020905b81548152906001019060200180831161043157829003601f168201915b5050505050815250509050336001600160a01b031681602001516001600160a01b0316146104be5760405162461bcd60e51b815260206004820181905260248201527f4163636f756e743a3a657865637574653a20696e76616c696420636c69656e746044820152606401610245565b60608101516040517f26e8f9490000000000000000000000000000000000000000000000000000000081526000916001600160a01b0316906326e8f9499061051090899086908a908a90600401610e80565b6020604051808303816000875af115801561052f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105539190610b58565b9050806105a25760405162461bcd60e51b815260206004820152601d60248201527f4163636f756e743a3a657865637574653a206e6f7420616c6c6f7765640000006044820152606401610245565b600082604001516001600160a01b031686866040516105c2929190610ef1565b6000604051808303816000865af19150503d80600081146105ff576040519150601f19603f3d011682016040523d82523d6000602084013e610604565b606091505b50945090508061067c5760405162461bcd60e51b815260206004820152602360248201527f4163636f756e743a3a657865637574653a20776f726c642063616c6c2066616960448201527f6c656400000000000000000000000000000000000000000000000000000000006064820152608401610245565b5050509392505050565b6000546001600160a01b031633146107065760405162461bcd60e51b815260206004820152603160248201527f4163636f756e743a3a6368616e67654f776e65723a206f6e6c79206f776e657260448201527f2063616e206368616e6765206f776e65720000000000000000000000000000006064820152608401610245565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6002602081905260009182526040909120805460018201549282015460038301546004840180546001600160a01b039485169685169593851694909216929161077d90610be8565b80601f01602080910402602001604051908101604052809291908181526020018280546107a990610be8565b80156107f65780601f106107cb576101008083540402835291602001916107f6565b820191906000526020600020905b8154815290600101906020018083116107d957829003601f168201915b5050505050905085565b50805461080c90610be8565b6000825580601f1061081c575050565b601f01602090049060005260206000209081019061083a919061083d565b50565b5b80821115610852576000815560010161083e565b5090565b60008083601f84011261086857600080fd5b50813567ffffffffffffffff81111561088057600080fd5b60208301915083602082850101111561089857600080fd5b9250929050565b6000806000604084860312156108b457600080fd5b833567ffffffffffffffff808211156108cc57600080fd5b9085019060a082880312156108e057600080fd5b909350602085013590808211156108f657600080fd5b5061090386828701610856565b9497909650939450505050565b60006020828403121561092257600080fd5b5035919050565b60008060006040848603121561093e57600080fd5b83359250602084013567ffffffffffffffff81111561095c57600080fd5b61090386828701610856565b6000815180845260005b8181101561098e57602081850181015186830182015201610972565b818111156109a0576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006109c86020830184610968565b9392505050565b6001600160a01b038116811461083a57600080fd5b6000602082840312156109f657600080fd5b81356109c8816109cf565b60006001600160a01b0380881683528087166020840152808616604084015280851660608401525060a06080830152610a3d60a0830184610968565b979650505050505050565b6000808335601e19843603018112610a5f57600080fd5b830160208101925035905067ffffffffffffffff811115610a7f57600080fd5b80360383131561089857600080fd5b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b60006001600160a01b038087168352606060208401528535610ada816109cf565b811660608401526020860135610aef816109cf565b811660808401526040860135610b04816109cf565b811660a08401526060860135610b19816109cf565b1660c0830152610b2c6080860186610a48565b60a060e0850152610b4261010085018284610a8e565b9150508281036040840152610a3d818587610a8e565b600060208284031215610b6a57600080fd5b815180151581146109c857600080fd5b60008219821115610bb4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181811c90821680610bfc57607f821691505b602082108103610c35577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561036257600081815260208120601f850160051c81016020861015610c625750805b601f850160051c820191505b81811015610c8157828155600101610c6e565b505050505050565b67ffffffffffffffff831115610ca157610ca1610bb9565b610cb583610caf8354610be8565b83610c3b565b6000601f841160018114610ce95760008515610cd15750838201355b600019600387901b1c1916600186901b178355610d43565b600083815260209020601f19861690835b82811015610d1a5786850135825560209485019460019092019101610cfa565b5086821015610d375760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b8135610d55816109cf565b815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038216178255506020820135610d8a816109cf565b60018201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038316179055506040820135610dc3816109cf565b60028201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038316179055506060820135610dfc816109cf565b60038201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038316179055506080820135601e19833603018112610e3e57600080fd5b8201803567ffffffffffffffff811115610e5757600080fd5b602082019150803603821315610e6c57600080fd5b610e7a818360048601610c89565b50505050565b8481526060602082015260006001600160a01b038086511660608401528060208701511660808401528060408701511660a08401528060608701511660c084015250608085015160a060e0840152610edc610100840182610968565b90508281036040840152610a3d818587610a8e565b818382376000910190815291905056fea264697066735822122075cba3aa4fb6a302bbc3dc7d315f0a5cbd0897d0c15f4d709b98a0317abcdc6064736f6c634300080d0033",
    "sourceMap": "1767:1832:119:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2297:484;;;;;;:::i;:::-;;:::i;:::-;;;1220:25:134;;;1208:2;1193:18;2297:484:119;;;;;;;;2787:181;;;;;;:::i;:::-;;:::i;:::-;;2974:623;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1802:20::-;;;;;-1:-1:-1;;;;;1802:20:119;;;;;;-1:-1:-1;;;;;2844:55:134;;;2826:74;;2814:2;2799:18;1802:20:119;2680:226:134;2117:174:119;;;;;;:::i;:::-;;:::i;1910:56::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;2297:484::-;2413:21;;2469:30;;;;:15;:30;:::i;:::-;2505:5;;2469:71;;;;;-1:-1:-1;;;;;2469:35:119;;;;;;:71;;2505:5;;;2512:15;;2529:10;;;;2469:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2450:90;;2555:11;2550:64;;2568:46;;-1:-1:-1;;;2568:46:119;;6987:2:134;2568:46:119;;;6969:21:134;7026:2;7006:18;;;6999:30;7065:34;7045:18;;;7038:62;7136:6;7116:18;;;7109:34;7160:19;;2568:46:119;;;;;;;;2550:64;2647:20;;;:24;;;:::i;:::-;2624:20;:47;;;2727:29;;;;:14;:29;;;;;2624:47;;-1:-1:-1;2759:15:119;;2727:47;2759:15;2727:29;:47;:::i;:::-;;;;2440:341;2297:484;;;;;:::o;2787:181::-;2867:5;;-1:-1:-1;;;;;2867:5:119;2853:10;:19;2845:70;;;;-1:-1:-1;;;2845:70:119;;12353:2:134;2845:70:119;;;12335:21:134;12392:2;12372:18;;;12365:30;12431:34;12411:18;;;12404:62;12502:8;12482:18;;;12475:36;12528:19;;2845:70:119;12151:402:134;2845:70:119;2932:29;;;;:14;:29;;;;;;;2925:36;;-1:-1:-1;;2925:36:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:29;2925:36;;;;2932:29;2925:36;:::i;:::-;;;2787:181;:::o;2974:623::-;3090:37;3130:29;;;:14;:29;;;;;;;;3090:69;;;;;;;;;-1:-1:-1;;;;;3090:69:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3054:24;3090:69;;;;;;;;;;;;3054:24;;3090:37;:69;3130:29;3090:69;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3203:10;-1:-1:-1;;;;;3177:36:119;:15;:22;;;-1:-1:-1;;;;;3177:36:119;;3169:81;;;;-1:-1:-1;;;3169:81:119;;12760:2:134;3169:81:119;;;12742:21:134;;;12779:18;;;12772:30;12838:34;12818:18;;;12811:62;12890:18;;3169:81:119;12558:356:134;3169:81:119;3276:28;;;;:87;;;;;3260:13;;-1:-1:-1;;;;;3276:48:119;;;;:87;;3325:13;;3276:15;;3357:5;;;;3276:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3260:103;;3378:8;3373:54;;3388:39;;-1:-1:-1;;;3388:39:119;;14073:2:134;3388:39:119;;;14055:21:134;14112:2;14092:18;;;14085:30;14151:31;14131:18;;;14124:59;14200:18;;3388:39:119;13871:353:134;3373:54:119;3438:13;3487:15;:21;;;-1:-1:-1;;;;;3487:26:119;3514:5;;3487:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3461:59:119;-1:-1:-1;3461:59:119;-1:-1:-1;3461:59:119;3530:60;;3545:45;;-1:-1:-1;;;3545:45:119;;14707:2:134;3545:45:119;;;14689:21:134;14746:2;14726:18;;;14719:30;14785:34;14765:18;;;14758:62;14856:5;14836:18;;;14829:33;14879:19;;3545:45:119;14505:399:134;3530:60:119;3080:517;;;2974:623;;;;;:::o;2117:174::-;2198:5;;-1:-1:-1;;;;;2198:5:119;2184:10;:19;2176:81;;;;-1:-1:-1;;;2176:81:119;;15111:2:134;2176:81:119;;;15093:21:134;15150:2;15130:18;;;15123:30;15189:34;15169:18;;;15162:62;15260:19;15240:18;;;15233:47;15297:19;;2176:81:119;14909:413:134;2176:81:119;2267:5;:17;;-1:-1:-1;;2267:17:119;-1:-1:-1;;;;;2267:17:119;;;;;;;;;;2117:174::o;1910:56::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1910:56:119;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:347:134:-;65:8;75:6;129:3;122:4;114:6;110:17;106:27;96:55;;147:1;144;137:12;96:55;-1:-1:-1;170:20:134;;213:18;202:30;;199:50;;;245:1;242;235:12;199:50;282:4;274:6;270:17;258:29;;334:3;327:4;318:6;310;306:19;302:30;299:39;296:59;;;351:1;348;341:12;296:59;14:347;;;;;:::o;366:703::-;480:6;488;496;549:2;537:9;528:7;524:23;520:32;517:52;;;565:1;562;555:12;517:52;605:9;592:23;634:18;675:2;667:6;664:14;661:34;;;691:1;688;681:12;661:34;714:22;;;;770:3;752:16;;;748:26;745:46;;;787:1;784;777:12;745:46;810:2;;-1:-1:-1;865:2:134;850:18;;837:32;;881:16;;;878:36;;;910:1;907;900:12;878:36;;949:60;1001:7;990:8;979:9;975:24;949:60;:::i;:::-;366:703;;1028:8;;-1:-1:-1;923:86:134;;-1:-1:-1;;;;366:703:134:o;1256:180::-;1315:6;1368:2;1356:9;1347:7;1343:23;1339:32;1336:52;;;1384:1;1381;1374:12;1336:52;-1:-1:-1;1407:23:134;;1256:180;-1:-1:-1;1256:180:134:o;1441:477::-;1520:6;1528;1536;1589:2;1577:9;1568:7;1564:23;1560:32;1557:52;;;1605:1;1602;1595:12;1557:52;1641:9;1628:23;1618:33;;1702:2;1691:9;1687:18;1674:32;1729:18;1721:6;1718:30;1715:50;;;1761:1;1758;1751:12;1715:50;1800:58;1850:7;1841:6;1830:9;1826:22;1800:58;:::i;1923:530::-;1964:3;2002:5;1996:12;2029:6;2024:3;2017:19;2054:1;2064:162;2078:6;2075:1;2072:13;2064:162;;;2140:4;2196:13;;;2192:22;;2186:29;2168:11;;;2164:20;;2157:59;2093:12;2064:162;;;2244:6;2241:1;2238:13;2235:87;;;2310:1;2303:4;2294:6;2289:3;2285:16;2281:27;2274:38;2235:87;-1:-1:-1;2367:2:134;2355:15;-1:-1:-1;;2351:88:134;2342:98;;;;2442:4;2338:109;;1923:530;-1:-1:-1;;1923:530:134:o;2458:217::-;2605:2;2594:9;2587:21;2568:4;2625:44;2665:2;2654:9;2650:18;2642:6;2625:44;:::i;:::-;2617:52;2458:217;-1:-1:-1;;;2458:217:134:o;2911:154::-;-1:-1:-1;;;;;2990:5:134;2986:54;2979:5;2976:65;2966:93;;3055:1;3052;3045:12;3070:247;3129:6;3182:2;3170:9;3161:7;3157:23;3153:32;3150:52;;;3198:1;3195;3188:12;3150:52;3237:9;3224:23;3256:31;3281:5;3256:31;:::i;3322:655::-;3598:4;-1:-1:-1;;;;;3708:2:134;3700:6;3696:15;3685:9;3678:34;3760:2;3752:6;3748:15;3743:2;3732:9;3728:18;3721:43;3812:2;3804:6;3800:15;3795:2;3784:9;3780:18;3773:43;3864:2;3856:6;3852:15;3847:2;3836:9;3832:18;3825:43;;3905:3;3899;3888:9;3884:19;3877:32;3926:45;3966:3;3955:9;3951:19;3943:6;3926:45;:::i;:::-;3918:53;3322:655;-1:-1:-1;;;;;;;3322:655:134:o;4259:562::-;4317:5;4324:6;4384:3;4371:17;-1:-1:-1;;4455:8:134;4439:14;4435:29;4431:102;4411:18;4407:127;4397:155;;4548:1;4545;4538:12;4397:155;4576:33;;4680:4;4667:18;;;-1:-1:-1;4628:21:134;;-1:-1:-1;4708:18:134;4697:30;;4694:50;;;4740:1;4737;4730:12;4694:50;4790:6;4774:14;4770:27;4760:8;4756:42;4753:62;;;4811:1;4808;4801:12;4826:325;4914:6;4909:3;4902:19;4966:6;4959:5;4952:4;4947:3;4943:14;4930:43;;5018:1;5011:4;5002:6;4997:3;4993:16;4989:27;4982:38;4884:3;5140:4;-1:-1:-1;;5065:2:134;5057:6;5053:15;5049:88;5044:3;5040:98;5036:109;5029:116;;4826:325;;;;:::o;5156:1342::-;5400:4;-1:-1:-1;;;;;5510:2:134;5502:6;5498:15;5487:9;5480:34;5550:2;5545;5534:9;5530:18;5523:30;5588:6;5575:20;5604:31;5629:5;5604:31;:::i;:::-;5671:14;;5666:2;5651:18;;5644:42;5735:2;5723:15;;5710:29;5748:33;5710:29;5748:33;:::i;:::-;5818:16;;5812:3;5797:19;;5790:45;5884:4;5872:17;;5859:31;5899:33;5859:31;5899:33;:::i;:::-;5970:16;;5963:4;5948:20;;5941:46;6036:2;6024:15;;6011:29;6049:33;6011:29;6049:33;:::i;:::-;6119:16;6113:3;6098:19;;6091:45;6179:56;6230:3;6218:16;;6222:6;6179:56;:::i;:::-;6272:4;6266:3;6255:9;6251:19;6244:33;6297:74;6366:3;6355:9;6351:19;6337:12;6323;6297:74;:::i;:::-;6286:85;;;6418:9;6413:3;6409:19;6402:4;6391:9;6387:20;6380:49;6446:46;6488:3;6480:6;6472;6446:46;:::i;6503:277::-;6570:6;6623:2;6611:9;6602:7;6598:23;6594:32;6591:52;;;6639:1;6636;6629:12;6591:52;6671:9;6665:16;6724:5;6717:13;6710:21;6703:5;6700:32;6690:60;;6746:1;6743;6736:12;7190:282;7230:3;7261:1;7257:6;7254:1;7251:13;7248:193;;;7297:77;7294:1;7287:88;7398:4;7395:1;7388:15;7426:4;7423:1;7416:15;7248:193;-1:-1:-1;7457:9:134;;7190:282::o;7764:184::-;7816:77;7813:1;7806:88;7913:4;7910:1;7903:15;7937:4;7934:1;7927:15;7953:437;8032:1;8028:12;;;;8075;;;8096:61;;8150:4;8142:6;8138:17;8128:27;;8096:61;8203:2;8195:6;8192:14;8172:18;8169:38;8166:218;;8240:77;8237:1;8230:88;8341:4;8338:1;8331:15;8369:4;8366:1;8359:15;8166:218;;7953:437;;;:::o;8520:544::-;8621:2;8616:3;8613:11;8610:448;;;8657:1;8682:5;8678:2;8671:17;8727:4;8723:2;8713:19;8797:2;8785:10;8781:19;8778:1;8774:27;8768:4;8764:38;8833:4;8821:10;8818:20;8815:47;;;-1:-1:-1;8856:4:134;8815:47;8911:2;8906:3;8902:12;8899:1;8895:20;8889:4;8885:31;8875:41;;8966:82;8984:2;8977:5;8974:13;8966:82;;;9029:17;;;9010:1;8999:13;8966:82;;;8970:3;;;8520:544;;;:::o;9300:1305::-;9406:18;9401:3;9398:27;9395:53;;;9428:18;;:::i;:::-;9457:93;9546:3;9506:38;9538:4;9532:11;9506:38;:::i;:::-;9500:4;9457:93;:::i;:::-;9576:1;9601:2;9596:3;9593:11;9618:1;9613:734;;;;10391:1;10408:3;10405:93;;;-1:-1:-1;10464:19:134;;;10451:33;10405:93;-1:-1:-1;;9197:1:134;9193:11;;;9189:84;9185:89;9175:100;9281:1;9277:11;;;9172:117;10511:78;;9586:1013;;9613:734;8467:1;8460:14;;;8504:4;8491:18;;-1:-1:-1;;9649:76:134;;;9808:9;9830:229;9844:7;9841:1;9838:14;9830:229;;;9933:19;;;9920:33;9905:49;;10040:4;10025:20;;;;9993:1;9981:14;;;;9860:12;9830:229;;;9834:3;10087;10078:7;10075:16;10072:219;;;-1:-1:-1;;10201:3:134;10195;10192:1;10188:11;10184:21;10180:94;10176:99;10163:9;10158:3;10154:19;10141:33;10137:139;10129:6;10122:155;10072:219;;;10334:1;10328:3;10325:1;10321:11;10317:19;10311:4;10304:33;9586:1013;;;9300:1305;;;:::o;10610:1536::-;10791:5;10778:19;10806:33;10831:7;10806:33;:::i;:::-;7615:11;;-1:-1:-1;;7611:84:134;-1:-1:-1;;;;;7697:54:134;;7608:144;7595:158;;10848:96;10992:2;10985:5;10981:14;10968:28;11005:33;11030:7;11005:33;:::i;:::-;11139:1;11129:12;;7615:11;;-1:-1:-1;;7611:84:134;-1:-1:-1;;;;;7697:54:134;;7608:144;7595:158;;11047:104;11199:2;11192:5;11188:14;11175:28;11212:33;11237:7;11212:33;:::i;:::-;11346:1;11336:12;;7615:11;;-1:-1:-1;;7611:84:134;-1:-1:-1;;;;;7697:54:134;;7608:144;7595:158;;11254:104;11406:2;11399:5;11395:14;11382:28;11419:33;11444:7;11419:33;:::i;:::-;11553:1;11543:12;;7615:11;;-1:-1:-1;;7611:84:134;-1:-1:-1;;;;;7697:54:134;;7608:144;7595:158;;11461:104;11624:3;11617:5;11613:15;11600:29;-1:-1:-1;;11696:5:134;11680:14;11676:26;11672:99;11652:18;11648:124;11638:152;;11786:1;11783;11776:12;11638:152;11811:30;;11864:18;;11905;11894:30;;11891:50;;;11937:1;11934;11927:12;11891:50;11974:2;11968:4;11964:13;11950:27;;12021:6;12005:14;12001:27;11993:6;11989:40;11986:60;;;12042:1;12039;12032:12;11986:60;12055:85;12133:6;12125;12121:1;12115:4;12111:12;12055:85;:::i;:::-;;;10610:1536;;:::o;12919:947::-;13198:6;13187:9;13180:25;13241:2;13236;13225:9;13221:18;13214:30;13161:4;-1:-1:-1;;;;;13360:2:134;13351:6;13345:13;13341:22;13336:2;13325:9;13321:18;13314:50;13429:2;13423;13415:6;13411:15;13405:22;13401:31;13395:3;13384:9;13380:19;13373:60;13501:2;13493:4;13485:6;13481:17;13475:24;13471:33;13464:4;13453:9;13449:20;13442:63;13570:2;13564;13556:6;13552:15;13546:22;13542:31;13536:3;13525:9;13521:19;13514:60;;13621:3;13613:6;13609:16;13603:23;13663:4;13657:3;13646:9;13642:19;13635:33;13688:51;13734:3;13723:9;13719:19;13705:12;13688:51;:::i;:::-;13677:62;;13786:9;13781:3;13777:19;13770:4;13759:9;13755:20;13748:49;13814:46;13856:3;13848:6;13840;13814:46;:::i;14229:271::-;14412:6;14404;14399:3;14386:33;14368:3;14438:16;;14463:13;;;14438:16;14229:271;-1:-1:-1;14229:271:134:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "auth((address,address,address,address,bytes),bytes)": "0998d8de",
    "changeOwner(address)": "a6f9dae1",
    "execute(uint256,bytes)": "59efcb15",
    "owner()": "8da5cb5b",
    "permissionData(uint256)": "fe4f707c",
    "revoke(uint256)": "20c5429b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IAuthController\",\"name\":\"authController\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"},{\"internalType\":\"contract ILimitCheckerSystem\",\"name\":\"limitChecker\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"limitData\",\"type\":\"bytes\"}],\"internalType\":\"struct IAccount.PermissionData\",\"name\":\"_permissionData\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"auth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_permissionId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_permissionId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"_returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"permissionData\",\"outputs\":[{\"internalType\":\"contract IAuthController\",\"name\":\"authController\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"},{\"internalType\":\"contract ILimitCheckerSystem\",\"name\":\"limitChecker\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"limitData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_permissionId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"auth((address,address,address,address,bytes),bytes)\":{\"params\":{\"_permissionData\":\"The permission data struct with the information of the underlying permission\",\"_signature\":\"The signature obtained from the permission data hash sign\"}},\"execute(uint256,bytes)\":{\"params\":{\"_data\":\"The execution data and arguments\",\"_permissionId\":\"The permission id related to the given permission\"}},\"revoke(uint256)\":{\"params\":{\"_permissionId\":\"The permission id related to the given permission\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"auth((address,address,address,address,bytes),bytes)\":{\"notice\":\"function that authorizes a client to execute an action on behalf of the signer\"},\"execute(uint256,bytes)\":{\"notice\":\"function that executes an action on behalf of the signer\"},\"revoke(uint256)\":{\"notice\":\"function that revokes a permission\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/account/Account.sol\":\"Account\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@latticexyz/schema-type/src/solidity/SchemaType.sol\":{\"keccak256\":\"0xe881f296ba0fe410faa6395ee4a65b9bf154947aebc6aa323d41a0484504221e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba7f706464d14365ff751936ba96f79f200df7bcd9d9f8abccd0b41387ca7967\",\"dweb:/ipfs/QmTiHgH3ZM2oJoqsbNs3iwwPFNYFNU7m8co87woxRLaUZ6\"]},\"node_modules/@latticexyz/store/src/Bytes.sol\":{\"keccak256\":\"0xdfcc270654744ea06ff29bf4f608db9f2279685ee14c4ded90815fb478ba6d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78669b369089f28826893e9738a1060af3ad5917b6954b20b723945e0d1d47a\",\"dweb:/ipfs/QmQhnwV2TMbdaCgNjUvgWn4qQQCggRQZv3TLynVRRtgr2o\"]},\"node_modules/@latticexyz/store/src/IStore.sol\":{\"keccak256\":\"0xd9bdb90c4f9b19380e3a348bc9f6333c07496df01fa452a6e93b930f830087b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eefbdbfaa5f7173b58d4c447ca64ede31b73591d8fec64a38be53c7bdfcd6163\",\"dweb:/ipfs/QmdxQxfdpUSf6xkQ5z2qLGaphinBH6wVNbRRBLbo88r6Zs\"]},\"node_modules/@latticexyz/store/src/IStoreErrors.sol\":{\"keccak256\":\"0xc001ac6dca3e41389da8d6e4a7305e84f70d5df9fd631a72b974b6fc44fb753a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://989b7e7146c5bfbf7468b7dea0432c3119a033a337702d7c063ac09654eb5f43\",\"dweb:/ipfs/QmVcTf9YNPb8QhZtU3WTSjezX1XvKRVTRiXGcqqMH8LD7T\"]},\"node_modules/@latticexyz/store/src/Memory.sol\":{\"keccak256\":\"0x706d0d1ddd874bdcd4f73422721420b32939c1c96d4718db8b1b8e9f78bfa76c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ed8c858fa9c3756cb70cb92bb860e0ae6429eb62551b502fb4a883e1344eb42\",\"dweb:/ipfs/QmezLAADZmFj8bKS9dccTQYHcpy4g8PSZ75AuvppSwjrW7\"]},\"node_modules/@latticexyz/store/src/PackedCounter.sol\":{\"keccak256\":\"0x09e48063f57cee0a723812f0e8e7e95622064d8d6b7e238d634efb21738c7b85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef32c0c6bf7956bed5f7c1da0362e2fa725882d9163e8b2113e8019ec1bcc8ed\",\"dweb:/ipfs/QmRrqWrH3f14yHn9NTUFpLkCAHrcfVZCJHPREySHMdaBiH\"]},\"node_modules/@latticexyz/store/src/Schema.sol\":{\"keccak256\":\"0xe5329478d0a81014cd4a07f482a4929e32b7086dbbed3c7b6affd9fb6162a950\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0b4481576081fd47a0d82294d7024b3103571f4b11282123a2e2a58540a1af4\",\"dweb:/ipfs/QmdKTreXa3gqhi92NvVBqvs3uPasA9RvgzvUj4LWte5uMZ\"]},\"node_modules/@latticexyz/store/src/Slice.sol\":{\"keccak256\":\"0x14879c6c859cad89451616dcee1ab6222fd565849809b89407de48f0c1a01133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924caa18aa0e656a295da626d586dfb120bbea321123010462b0640c7e0c52c4\",\"dweb:/ipfs/QmNueqwy4g5mwq9kXaPzue8X2mqyFjH2P2AFi3pNN3WTAt\"]},\"node_modules/@latticexyz/store/src/Storage.sol\":{\"keccak256\":\"0x2ccca6556a3c2595479914d30efa84fc3b61cff30036522714a0ef99289ee2af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d169812a4159454be580d42fedee63d121646102e6462fe3b2ea905b69bee07\",\"dweb:/ipfs/QmXiKsMeN4nsdiqDwhuWfb4J3UF57B4rkuwkfbrRXA6vtb\"]},\"node_modules/@latticexyz/store/src/StoreCore.sol\":{\"keccak256\":\"0xb4d4436c78cde88619f842be3c0d1770c45ad5f1523887e8236180b231fadb57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13ff54ec101fb9fd2463d3894fa1dfbed680986963864e7204b207221519c55\",\"dweb:/ipfs/QmTW62YAqHRPPnKGcV8vZR875XzAJbvD8ey4AtoS36eC1x\"]},\"node_modules/@latticexyz/store/src/StoreSwitch.sol\":{\"keccak256\":\"0x012199fd51d775d6a3dba1cd0b02379e25f0a53f96dd7c7abf4bbfaa571b27bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d67579506893f72839108cdb092ddafc293cc378e723d529996f577034842e31\",\"dweb:/ipfs/QmbEQbaxpegizVk8tA5gmo2DF7J84kEMpGrgdGzwKecyWH\"]},\"node_modules/@latticexyz/store/src/TableId.sol\":{\"keccak256\":\"0x8c55662dc4f66be577bb96bfdcb65d95fe1323c733443ab749cb9ec1e58f0a6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://209ed70247c1c64b56d9b21f2902e67e0994cb89ac19be8e1553dac9d978fb76\",\"dweb:/ipfs/QmVLYNDwBL3GZidDpwqFZx916zoGZ5tWVztxKQFEEzVybP\"]},\"node_modules/@latticexyz/store/src/Utils.sol\":{\"keccak256\":\"0x426216bfa1c0e70640787007a6e39257cf09e586fd04831ea4fb3dd9c5768fc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38e657fa9cfaebe39477eaff27d1ad4d7eeaf0c0058539d2ec7e6976d93df4f4\",\"dweb:/ipfs/QmRuaxqRjUrHHC2ZyTnpmq6sfrWGCDh91B6F5chFAToU6U\"]},\"node_modules/@latticexyz/store/src/codegen/Tables.sol\":{\"keccak256\":\"0x2eba8dd4e9f07b505438a2fb744ac7da26b1f6321b8a88054e9442db947ab435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd1a60dfff209a3f1df84aeb5d7f8a5cf0419c19be63bac428df0a779d5ba437\",\"dweb:/ipfs/QmaHem2GMJPHrtr1f7fk1ThTBESdYipmBxEEoKT1DBRmsd\"]},\"node_modules/@latticexyz/store/src/codegen/tables/Callbacks.sol\":{\"keccak256\":\"0x17506500e0fdd4bd3492a09e4f536b05757ae605751e0a5278e8e3ac0f1a5b84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36cbe9eb1895ac3a88ad9366d8d4de10e154e8b4fbb70a3f0c959888a089be1\",\"dweb:/ipfs/QmcgnjXefmKQs2diUfxRubovVQvoqjP84JXnn6YqtbR3pn\"]},\"node_modules/@latticexyz/store/src/codegen/tables/Hooks.sol\":{\"keccak256\":\"0xcc32a9d83cc79d3ab398c8b9181c56b24d9cceac7fb7435720e3d6c82318b190\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1ed26494bf9695c455e7a54e224f76feb5f643c041a4ffb43091c6705e5d4d5\",\"dweb:/ipfs/QmTuKASQqPkK8x9tLVKW6G8VzD665xqTZV8YF1EwodYazx\"]},\"node_modules/@latticexyz/store/src/codegen/tables/Mixed.sol\":{\"keccak256\":\"0x212891acd187755e79b73bac2370f869e7c3c9f9c6ad5ee2e7a578fe79322814\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e199a05d6e8e0b2735277b1f8d34c1977bfbe7564786ec172596bdfc309b2c76\",\"dweb:/ipfs/QmeeXPr2kiKHAXrxmK4cZnpRDDJC4cDrb73tj69Z79XuUb\"]},\"node_modules/@latticexyz/store/src/codegen/tables/StoreMetadata.sol\":{\"keccak256\":\"0x360cc0f613011df7d7e1dc4ef5648a17cdec9574df0c01dfbce9b5ef68556975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c9bbcdb1affddf1031c1f850b82a06e7e90b368919e41ac4be8756537bbc1c\",\"dweb:/ipfs/QmcJ4Nk3gWToADf1hD2A5agByGVU3DwxBJk5jQY58jL2jw\"]},\"node_modules/@latticexyz/store/src/codegen/tables/Vector2.sol\":{\"keccak256\":\"0xfcd9fda67bc9c5ea55866f08f53e091b6a8ba8627da6710b8864c1fee1b97e16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c92456f8b7186b9401c26471148e6e048cfaedc81f2703e929011639d3843ae\",\"dweb:/ipfs/Qmf65ygAksGN51dpeJuFcBbcppaJFPARPwqnEU5JUFPgkm\"]},\"node_modules/@latticexyz/store/src/tightcoder/DecodeSlice.sol\":{\"keccak256\":\"0xe760dfb8ff20cfb44eee6a5f03ac84abbc91382fca2e36c88c92046e6b3a66e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75eb4b355c547ffee62031d8dfb80844fa31fa4460543a088278083662dc4c12\",\"dweb:/ipfs/Qmf8sRcrjJ6hEQ8TPwwe6KcXcE2MPw7Juvf7fKBZ1fBCt6\"]},\"node_modules/@latticexyz/store/src/tightcoder/EncodeArray.sol\":{\"keccak256\":\"0x046f0a2dc543c7a80be91ff26b19990a10fbe73cb605f4944af38e04326a43df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d94f038e70179571d2aed3cbe03e812ce79a471372171fb78e8189bebd7ae1ac\",\"dweb:/ipfs/QmUV4bkaEc8hefLpLRaGwmu4WZsqRLE9e6R8UdaKPExb6p\"]},\"node_modules/@latticexyz/store/src/tightcoder/TightCoder.sol\":{\"keccak256\":\"0xff0278a4e35174bbed8a38dad8ae7506f725bfe95f0b7c13829c353d68dd25dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26249ec0c2fa3a3430a2f8edbfc5cd678e34ea1cf1d7490ecaf1e925c976eb85\",\"dweb:/ipfs/QmUpkhr5kFiDKc7rZ2z5HcTf5PkrWVJu5sa31tYv911cPL\"]},\"node_modules/@latticexyz/world/src/System.sol\":{\"keccak256\":\"0xf1342c8461adb4c5821c1ca106a67ba34402b36265fa63bf766eed937bd92bf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea41f96a27a26d56d62824e007b3b0234d44fcd94361e5c8f40fdb334cbf444b\",\"dweb:/ipfs/QmRfj4iS5Lu9V4e47wsPQy4op1qQ6hqaJpERLB5EyzqW38\"]},\"node_modules/@latticexyz/world/src/WorldContext.sol\":{\"keccak256\":\"0xd44a445ff07ac1551e5a8f17450381664ecf68dcb1c89fee8fb11b9b73c9cd7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1235cc5636743b9afbb313676fc4c84ac5607142c758b0bfc59107aff79ed30c\",\"dweb:/ipfs/QmUtTUFjxKy7GtQC1Uzn6B2bRNZpcASFySPDjd16T47Rcz\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"src/account/Account.sol\":{\"keccak256\":\"0x831dfde5752c3015a7d4dd0465451cfbb7a0f25b18cdf60f283df1a2bfd9a5d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73e0d1013ced51a84c3f9398a547fa6b068ea5e23fc961e5c837265bfcb70976\",\"dweb:/ipfs/QmRdErChr4rxcxBci9Brv3aUiWYdibAon2tpZRMYYNf8fw\"]},\"src/authController/AuthController.sol\":{\"keccak256\":\"0x03894d7b57a7631f2789053683d4dc3b42698adaa0fccc62f297ac1d9381237d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1397fbf2db98f3bef589ed58524a5f5b3cc4c3a8c6ae5ecc5d075fb80c31511\",\"dweb:/ipfs/Qmd749k1xjhogNb8ULevjwZTY1ywXMx7PWztZo1zAhtwnk\"]},\"src/systems/LimitCheckerSystem.sol\":{\"keccak256\":\"0xcdbdacb0722eea33853c20cff1dbf1ccecb83f737b5335219ec85e99cec0f863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85a218ec91b32310012f2184f90a041fb641df36a752856d81c40e52cb4f01f3\",\"dweb:/ipfs/QmXJHWzHJsmk1mwfQCAAiPE4uuLPQFLPtkRYnLgFnggRhf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "struct IAccount.PermissionData",
              "name": "_permissionData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IAuthController",
                  "name": "authController",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "client",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "world",
                  "type": "address"
                },
                {
                  "internalType": "contract ILimitCheckerSystem",
                  "name": "limitChecker",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "limitData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "auth",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_permissionId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_permissionId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "_returnData",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionData",
          "outputs": [
            {
              "internalType": "contract IAuthController",
              "name": "authController",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "client",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            },
            {
              "internalType": "contract ILimitCheckerSystem",
              "name": "limitChecker",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "limitData",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_permissionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "auth((address,address,address,address,bytes),bytes)": {
            "params": {
              "_permissionData": "The permission data struct with the information of the underlying permission",
              "_signature": "The signature obtained from the permission data hash sign"
            }
          },
          "execute(uint256,bytes)": {
            "params": {
              "_data": "The execution data and arguments",
              "_permissionId": "The permission id related to the given permission"
            }
          },
          "revoke(uint256)": {
            "params": {
              "_permissionId": "The permission id related to the given permission"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "auth((address,address,address,address,bytes),bytes)": {
            "notice": "function that authorizes a client to execute an action on behalf of the signer"
          },
          "execute(uint256,bytes)": {
            "notice": "function that executes an action on behalf of the signer"
          },
          "revoke(uint256)": {
            "notice": "function that revokes a permission"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@latticexyz/=node_modules/@latticexyz/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 3000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/account/Account.sol": "Account"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@latticexyz/schema-type/src/solidity/SchemaType.sol": {
        "keccak256": "0xe881f296ba0fe410faa6395ee4a65b9bf154947aebc6aa323d41a0484504221e",
        "urls": [
          "bzz-raw://ba7f706464d14365ff751936ba96f79f200df7bcd9d9f8abccd0b41387ca7967",
          "dweb:/ipfs/QmTiHgH3ZM2oJoqsbNs3iwwPFNYFNU7m8co87woxRLaUZ6"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/Bytes.sol": {
        "keccak256": "0xdfcc270654744ea06ff29bf4f608db9f2279685ee14c4ded90815fb478ba6d1f",
        "urls": [
          "bzz-raw://e78669b369089f28826893e9738a1060af3ad5917b6954b20b723945e0d1d47a",
          "dweb:/ipfs/QmQhnwV2TMbdaCgNjUvgWn4qQQCggRQZv3TLynVRRtgr2o"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/IStore.sol": {
        "keccak256": "0xd9bdb90c4f9b19380e3a348bc9f6333c07496df01fa452a6e93b930f830087b6",
        "urls": [
          "bzz-raw://eefbdbfaa5f7173b58d4c447ca64ede31b73591d8fec64a38be53c7bdfcd6163",
          "dweb:/ipfs/QmdxQxfdpUSf6xkQ5z2qLGaphinBH6wVNbRRBLbo88r6Zs"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/IStoreErrors.sol": {
        "keccak256": "0xc001ac6dca3e41389da8d6e4a7305e84f70d5df9fd631a72b974b6fc44fb753a",
        "urls": [
          "bzz-raw://989b7e7146c5bfbf7468b7dea0432c3119a033a337702d7c063ac09654eb5f43",
          "dweb:/ipfs/QmVcTf9YNPb8QhZtU3WTSjezX1XvKRVTRiXGcqqMH8LD7T"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/Memory.sol": {
        "keccak256": "0x706d0d1ddd874bdcd4f73422721420b32939c1c96d4718db8b1b8e9f78bfa76c",
        "urls": [
          "bzz-raw://2ed8c858fa9c3756cb70cb92bb860e0ae6429eb62551b502fb4a883e1344eb42",
          "dweb:/ipfs/QmezLAADZmFj8bKS9dccTQYHcpy4g8PSZ75AuvppSwjrW7"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/PackedCounter.sol": {
        "keccak256": "0x09e48063f57cee0a723812f0e8e7e95622064d8d6b7e238d634efb21738c7b85",
        "urls": [
          "bzz-raw://ef32c0c6bf7956bed5f7c1da0362e2fa725882d9163e8b2113e8019ec1bcc8ed",
          "dweb:/ipfs/QmRrqWrH3f14yHn9NTUFpLkCAHrcfVZCJHPREySHMdaBiH"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/Schema.sol": {
        "keccak256": "0xe5329478d0a81014cd4a07f482a4929e32b7086dbbed3c7b6affd9fb6162a950",
        "urls": [
          "bzz-raw://e0b4481576081fd47a0d82294d7024b3103571f4b11282123a2e2a58540a1af4",
          "dweb:/ipfs/QmdKTreXa3gqhi92NvVBqvs3uPasA9RvgzvUj4LWte5uMZ"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/Slice.sol": {
        "keccak256": "0x14879c6c859cad89451616dcee1ab6222fd565849809b89407de48f0c1a01133",
        "urls": [
          "bzz-raw://924caa18aa0e656a295da626d586dfb120bbea321123010462b0640c7e0c52c4",
          "dweb:/ipfs/QmNueqwy4g5mwq9kXaPzue8X2mqyFjH2P2AFi3pNN3WTAt"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/Storage.sol": {
        "keccak256": "0x2ccca6556a3c2595479914d30efa84fc3b61cff30036522714a0ef99289ee2af",
        "urls": [
          "bzz-raw://9d169812a4159454be580d42fedee63d121646102e6462fe3b2ea905b69bee07",
          "dweb:/ipfs/QmXiKsMeN4nsdiqDwhuWfb4J3UF57B4rkuwkfbrRXA6vtb"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/StoreCore.sol": {
        "keccak256": "0xb4d4436c78cde88619f842be3c0d1770c45ad5f1523887e8236180b231fadb57",
        "urls": [
          "bzz-raw://c13ff54ec101fb9fd2463d3894fa1dfbed680986963864e7204b207221519c55",
          "dweb:/ipfs/QmTW62YAqHRPPnKGcV8vZR875XzAJbvD8ey4AtoS36eC1x"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/StoreSwitch.sol": {
        "keccak256": "0x012199fd51d775d6a3dba1cd0b02379e25f0a53f96dd7c7abf4bbfaa571b27bc",
        "urls": [
          "bzz-raw://d67579506893f72839108cdb092ddafc293cc378e723d529996f577034842e31",
          "dweb:/ipfs/QmbEQbaxpegizVk8tA5gmo2DF7J84kEMpGrgdGzwKecyWH"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/TableId.sol": {
        "keccak256": "0x8c55662dc4f66be577bb96bfdcb65d95fe1323c733443ab749cb9ec1e58f0a6e",
        "urls": [
          "bzz-raw://209ed70247c1c64b56d9b21f2902e67e0994cb89ac19be8e1553dac9d978fb76",
          "dweb:/ipfs/QmVLYNDwBL3GZidDpwqFZx916zoGZ5tWVztxKQFEEzVybP"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/Utils.sol": {
        "keccak256": "0x426216bfa1c0e70640787007a6e39257cf09e586fd04831ea4fb3dd9c5768fc4",
        "urls": [
          "bzz-raw://38e657fa9cfaebe39477eaff27d1ad4d7eeaf0c0058539d2ec7e6976d93df4f4",
          "dweb:/ipfs/QmRuaxqRjUrHHC2ZyTnpmq6sfrWGCDh91B6F5chFAToU6U"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/codegen/Tables.sol": {
        "keccak256": "0x2eba8dd4e9f07b505438a2fb744ac7da26b1f6321b8a88054e9442db947ab435",
        "urls": [
          "bzz-raw://bd1a60dfff209a3f1df84aeb5d7f8a5cf0419c19be63bac428df0a779d5ba437",
          "dweb:/ipfs/QmaHem2GMJPHrtr1f7fk1ThTBESdYipmBxEEoKT1DBRmsd"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/codegen/tables/Callbacks.sol": {
        "keccak256": "0x17506500e0fdd4bd3492a09e4f536b05757ae605751e0a5278e8e3ac0f1a5b84",
        "urls": [
          "bzz-raw://d36cbe9eb1895ac3a88ad9366d8d4de10e154e8b4fbb70a3f0c959888a089be1",
          "dweb:/ipfs/QmcgnjXefmKQs2diUfxRubovVQvoqjP84JXnn6YqtbR3pn"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/codegen/tables/Hooks.sol": {
        "keccak256": "0xcc32a9d83cc79d3ab398c8b9181c56b24d9cceac7fb7435720e3d6c82318b190",
        "urls": [
          "bzz-raw://e1ed26494bf9695c455e7a54e224f76feb5f643c041a4ffb43091c6705e5d4d5",
          "dweb:/ipfs/QmTuKASQqPkK8x9tLVKW6G8VzD665xqTZV8YF1EwodYazx"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/codegen/tables/Mixed.sol": {
        "keccak256": "0x212891acd187755e79b73bac2370f869e7c3c9f9c6ad5ee2e7a578fe79322814",
        "urls": [
          "bzz-raw://e199a05d6e8e0b2735277b1f8d34c1977bfbe7564786ec172596bdfc309b2c76",
          "dweb:/ipfs/QmeeXPr2kiKHAXrxmK4cZnpRDDJC4cDrb73tj69Z79XuUb"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/codegen/tables/StoreMetadata.sol": {
        "keccak256": "0x360cc0f613011df7d7e1dc4ef5648a17cdec9574df0c01dfbce9b5ef68556975",
        "urls": [
          "bzz-raw://17c9bbcdb1affddf1031c1f850b82a06e7e90b368919e41ac4be8756537bbc1c",
          "dweb:/ipfs/QmcJ4Nk3gWToADf1hD2A5agByGVU3DwxBJk5jQY58jL2jw"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/codegen/tables/Vector2.sol": {
        "keccak256": "0xfcd9fda67bc9c5ea55866f08f53e091b6a8ba8627da6710b8864c1fee1b97e16",
        "urls": [
          "bzz-raw://4c92456f8b7186b9401c26471148e6e048cfaedc81f2703e929011639d3843ae",
          "dweb:/ipfs/Qmf65ygAksGN51dpeJuFcBbcppaJFPARPwqnEU5JUFPgkm"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/tightcoder/DecodeSlice.sol": {
        "keccak256": "0xe760dfb8ff20cfb44eee6a5f03ac84abbc91382fca2e36c88c92046e6b3a66e0",
        "urls": [
          "bzz-raw://75eb4b355c547ffee62031d8dfb80844fa31fa4460543a088278083662dc4c12",
          "dweb:/ipfs/Qmf8sRcrjJ6hEQ8TPwwe6KcXcE2MPw7Juvf7fKBZ1fBCt6"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/tightcoder/EncodeArray.sol": {
        "keccak256": "0x046f0a2dc543c7a80be91ff26b19990a10fbe73cb605f4944af38e04326a43df",
        "urls": [
          "bzz-raw://d94f038e70179571d2aed3cbe03e812ce79a471372171fb78e8189bebd7ae1ac",
          "dweb:/ipfs/QmUV4bkaEc8hefLpLRaGwmu4WZsqRLE9e6R8UdaKPExb6p"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/tightcoder/TightCoder.sol": {
        "keccak256": "0xff0278a4e35174bbed8a38dad8ae7506f725bfe95f0b7c13829c353d68dd25dc",
        "urls": [
          "bzz-raw://26249ec0c2fa3a3430a2f8edbfc5cd678e34ea1cf1d7490ecaf1e925c976eb85",
          "dweb:/ipfs/QmUpkhr5kFiDKc7rZ2z5HcTf5PkrWVJu5sa31tYv911cPL"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/world/src/System.sol": {
        "keccak256": "0xf1342c8461adb4c5821c1ca106a67ba34402b36265fa63bf766eed937bd92bf9",
        "urls": [
          "bzz-raw://ea41f96a27a26d56d62824e007b3b0234d44fcd94361e5c8f40fdb334cbf444b",
          "dweb:/ipfs/QmRfj4iS5Lu9V4e47wsPQy4op1qQ6hqaJpERLB5EyzqW38"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/world/src/WorldContext.sol": {
        "keccak256": "0xd44a445ff07ac1551e5a8f17450381664ecf68dcb1c89fee8fb11b9b73c9cd7b",
        "urls": [
          "bzz-raw://1235cc5636743b9afbb313676fc4c84ac5607142c758b0bfc59107aff79ed30c",
          "dweb:/ipfs/QmUtTUFjxKy7GtQC1Uzn6B2bRNZpcASFySPDjd16T47Rcz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "src/account/Account.sol": {
        "keccak256": "0x831dfde5752c3015a7d4dd0465451cfbb7a0f25b18cdf60f283df1a2bfd9a5d2",
        "urls": [
          "bzz-raw://73e0d1013ced51a84c3f9398a547fa6b068ea5e23fc961e5c837265bfcb70976",
          "dweb:/ipfs/QmRdErChr4rxcxBci9Brv3aUiWYdibAon2tpZRMYYNf8fw"
        ],
        "license": "MIT"
      },
      "src/authController/AuthController.sol": {
        "keccak256": "0x03894d7b57a7631f2789053683d4dc3b42698adaa0fccc62f297ac1d9381237d",
        "urls": [
          "bzz-raw://d1397fbf2db98f3bef589ed58524a5f5b3cc4c3a8c6ae5ecc5d075fb80c31511",
          "dweb:/ipfs/Qmd749k1xjhogNb8ULevjwZTY1ywXMx7PWztZo1zAhtwnk"
        ],
        "license": "MIT"
      },
      "src/systems/LimitCheckerSystem.sol": {
        "keccak256": "0xcdbdacb0722eea33853c20cff1dbf1ccecb83f737b5335219ec85e99cec0f863",
        "urls": [
          "bzz-raw://85a218ec91b32310012f2184f90a041fb641df36a752856d81c40e52cb4f01f3",
          "dweb:/ipfs/QmXJHWzHJsmk1mwfQCAAiPE4uuLPQFLPtkRYnLgFnggRhf"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/account/Account.sol",
    "id": 65966,
    "exportedSymbols": {
      "Account": [
        65965
      ],
      "IAccount": [
        65799
      ],
      "IAuthController": [
        66053
      ],
      "ILimitCheckerSystem": [
        70104
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3568:119",
    "nodes": [
      {
        "id": 65754,
        "nodeType": "PragmaDirective",
        "src": "32:24:119",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 65756,
        "nodeType": "ImportDirective",
        "src": "58:69:119",
        "nodes": [],
        "absolutePath": "src/authController/AuthController.sol",
        "file": "../authController/AuthController.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 65966,
        "sourceUnit": 66137,
        "symbolAliases": [
          {
            "foreign": {
              "id": 65755,
              "name": "IAuthController",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66053,
              "src": "66:15:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 65758,
        "nodeType": "ImportDirective",
        "src": "128:70:119",
        "nodes": [],
        "absolutePath": "src/systems/LimitCheckerSystem.sol",
        "file": "../systems/LimitCheckerSystem.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 65966,
        "sourceUnit": 70116,
        "symbolAliases": [
          {
            "foreign": {
              "id": 65757,
              "name": "ILimitCheckerSystem",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70104,
              "src": "136:19:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 65799,
        "nodeType": "ContractDefinition",
        "src": "200:1565:119",
        "nodes": [
          {
            "id": 65771,
            "nodeType": "StructDefinition",
            "src": "606:183:119",
            "nodes": [],
            "canonicalName": "IAccount.PermissionData",
            "members": [
              {
                "constant": false,
                "id": 65761,
                "mutability": "mutable",
                "name": "authController",
                "nameLocation": "654:14:119",
                "nodeType": "VariableDeclaration",
                "scope": 65771,
                "src": "638:30:119",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IAuthController_$66053",
                  "typeString": "contract IAuthController"
                },
                "typeName": {
                  "id": 65760,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 65759,
                    "name": "IAuthController",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 66053,
                    "src": "638:15:119"
                  },
                  "referencedDeclaration": 66053,
                  "src": "638:15:119",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAuthController_$66053",
                    "typeString": "contract IAuthController"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65763,
                "mutability": "mutable",
                "name": "client",
                "nameLocation": "686:6:119",
                "nodeType": "VariableDeclaration",
                "scope": 65771,
                "src": "678:14:119",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 65762,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "678:7:119",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65765,
                "mutability": "mutable",
                "name": "world",
                "nameLocation": "710:5:119",
                "nodeType": "VariableDeclaration",
                "scope": 65771,
                "src": "702:13:119",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 65764,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "702:7:119",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65768,
                "mutability": "mutable",
                "name": "limitChecker",
                "nameLocation": "745:12:119",
                "nodeType": "VariableDeclaration",
                "scope": 65771,
                "src": "725:32:119",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ILimitCheckerSystem_$70104",
                  "typeString": "contract ILimitCheckerSystem"
                },
                "typeName": {
                  "id": 65767,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 65766,
                    "name": "ILimitCheckerSystem",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 70104,
                    "src": "725:19:119"
                  },
                  "referencedDeclaration": 70104,
                  "src": "725:19:119",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILimitCheckerSystem_$70104",
                    "typeString": "contract ILimitCheckerSystem"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65770,
                "mutability": "mutable",
                "name": "limitData",
                "nameLocation": "773:9:119",
                "nodeType": "VariableDeclaration",
                "scope": 65771,
                "src": "767:15:119",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 65769,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "767:5:119",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PermissionData",
            "nameLocation": "613:14:119",
            "scope": 65799,
            "visibility": "public"
          },
          {
            "id": 65782,
            "nodeType": "FunctionDefinition",
            "src": "1095:139:119",
            "nodes": [],
            "documentation": {
              "id": 65772,
              "nodeType": "StructuredDocumentation",
              "src": "795:295:119",
              "text": " @notice function that authorizes a client to execute an action on behalf of the signer\n @param _permissionData The permission data struct with the information of the underlying permission\n @param _signature The signature obtained from the permission data hash sign"
            },
            "functionSelector": "0998d8de",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "auth",
            "nameLocation": "1104:4:119",
            "parameters": {
              "id": 65778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65775,
                  "mutability": "mutable",
                  "name": "_permissionData",
                  "nameLocation": "1133:15:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65782,
                  "src": "1109:39:119",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PermissionData_$65771_calldata_ptr",
                    "typeString": "struct IAccount.PermissionData"
                  },
                  "typeName": {
                    "id": 65774,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65773,
                      "name": "PermissionData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65771,
                      "src": "1109:14:119"
                    },
                    "referencedDeclaration": 65771,
                    "src": "1109:14:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PermissionData_$65771_storage_ptr",
                      "typeString": "struct IAccount.PermissionData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65777,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "1165:10:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65782,
                  "src": "1150:25:119",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65776,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:5:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1108:68:119"
            },
            "returnParameters": {
              "id": 65781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65780,
                  "mutability": "mutable",
                  "name": "_permissionId",
                  "nameLocation": "1219:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65782,
                  "src": "1211:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1210:23:119"
            },
            "scope": 65799,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65792,
            "nodeType": "FunctionDefinition",
            "src": "1459:106:119",
            "nodes": [],
            "documentation": {
              "id": 65783,
              "nodeType": "StructuredDocumentation",
              "src": "1240:214:119",
              "text": " @notice function that executes an action on behalf of the signer\n @param _permissionId The permission id related to the given permission\n @param _data The execution data and arguments"
            },
            "functionSelector": "59efcb15",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "1468:7:119",
            "parameters": {
              "id": 65788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65785,
                  "mutability": "mutable",
                  "name": "_permissionId",
                  "nameLocation": "1484:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65792,
                  "src": "1476:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65787,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1514:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65792,
                  "src": "1499:20:119",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65786,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:5:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1475:45:119"
            },
            "returnParameters": {
              "id": 65791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65790,
                  "mutability": "mutable",
                  "name": "_returnData",
                  "nameLocation": "1552:11:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65792,
                  "src": "1539:24:119",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65789,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:5:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1538:26:119"
            },
            "scope": 65799,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65798,
            "nodeType": "FunctionDefinition",
            "src": "1715:48:119",
            "nodes": [],
            "documentation": {
              "id": 65793,
              "nodeType": "StructuredDocumentation",
              "src": "1571:139:119",
              "text": " @notice function that revokes a permission\n @param _permissionId The permission id related to the given permission"
            },
            "functionSelector": "20c5429b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revoke",
            "nameLocation": "1724:6:119",
            "parameters": {
              "id": 65796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65795,
                  "mutability": "mutable",
                  "name": "_permissionId",
                  "nameLocation": "1739:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65798,
                  "src": "1731:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1730:23:119"
            },
            "returnParameters": {
              "id": 65797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1762:0:119"
            },
            "scope": 65799,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IAccount",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          65799
        ],
        "name": "IAccount",
        "nameLocation": "210:8:119",
        "scope": 65966,
        "usedErrors": []
      },
      {
        "id": 65965,
        "nodeType": "ContractDefinition",
        "src": "1767:1832:119",
        "nodes": [
          {
            "id": 65803,
            "nodeType": "VariableDeclaration",
            "src": "1802:20:119",
            "nodes": [],
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1817:5:119",
            "scope": 65965,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 65802,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1802:7:119",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 65805,
            "nodeType": "VariableDeclaration",
            "src": "1829:36:119",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_permissionIdCounter",
            "nameLocation": "1845:20:119",
            "scope": 65965,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65804,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1829:7:119",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 65810,
            "nodeType": "VariableDeclaration",
            "src": "1910:56:119",
            "nodes": [],
            "constant": false,
            "functionSelector": "fe4f707c",
            "mutability": "mutable",
            "name": "permissionData",
            "nameLocation": "1952:14:119",
            "scope": 65965,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PermissionData_$65771_storage_$",
              "typeString": "mapping(uint256 => struct IAccount.PermissionData)"
            },
            "typeName": {
              "id": 65809,
              "keyType": {
                "id": 65806,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1918:7:119",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1910:34:119",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PermissionData_$65771_storage_$",
                "typeString": "mapping(uint256 => struct IAccount.PermissionData)"
              },
              "valueType": {
                "id": 65808,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 65807,
                  "name": "PermissionData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65771,
                  "src": "1929:14:119"
                },
                "referencedDeclaration": 65771,
                "src": "1929:14:119",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PermissionData_$65771_storage_ptr",
                  "typeString": "struct IAccount.PermissionData"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 65820,
            "nodeType": "FunctionDefinition",
            "src": "1973:59:119",
            "nodes": [],
            "body": {
              "id": 65819,
              "nodeType": "Block",
              "src": "2001:31:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 65817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65815,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65803,
                      "src": "2011:5:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 65816,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65812,
                      "src": "2019:6:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2011:14:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 65818,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:14:119"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 65813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65812,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1993:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65820,
                  "src": "1985:14:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1984:16:119"
            },
            "returnParameters": {
              "id": 65814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2001:0:119"
            },
            "scope": 65965,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65838,
            "nodeType": "FunctionDefinition",
            "src": "2117:174:119",
            "nodes": [],
            "body": {
              "id": 65837,
              "nodeType": "Block",
              "src": "2166:125:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 65829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 65826,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2184:3:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 65827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2184:10:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 65828,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65803,
                          "src": "2198:5:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2184:19:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e743a3a6368616e67654f776e65723a206f6e6c79206f776e65722063616e206368616e6765206f776e6572",
                        "id": 65830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2205:51:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a1d4542f42ac45e443309c831e3ddb9b1e37a97a643b792b1971e5b122a6e58",
                          "typeString": "literal_string \"Account::changeOwner: only owner can change owner\""
                        },
                        "value": "Account::changeOwner: only owner can change owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a1d4542f42ac45e443309c831e3ddb9b1e37a97a643b792b1971e5b122a6e58",
                          "typeString": "literal_string \"Account::changeOwner: only owner can change owner\""
                        }
                      ],
                      "id": 65825,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2176:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2176:81:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65832,
                  "nodeType": "ExpressionStatement",
                  "src": "2176:81:119"
                },
                {
                  "expression": {
                    "id": 65835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65833,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65803,
                      "src": "2267:5:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 65834,
                      "name": "_newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65822,
                      "src": "2275:9:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2267:17:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 65836,
                  "nodeType": "ExpressionStatement",
                  "src": "2267:17:119"
                }
              ]
            },
            "functionSelector": "a6f9dae1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeOwner",
            "nameLocation": "2126:11:119",
            "parameters": {
              "id": 65823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65822,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "2146:9:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65838,
                  "src": "2138:17:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2137:19:119"
            },
            "returnParameters": {
              "id": 65824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2166:0:119"
            },
            "scope": 65965,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65882,
            "nodeType": "FunctionDefinition",
            "src": "2297:484:119",
            "nodes": [],
            "body": {
              "id": 65881,
              "nodeType": "Block",
              "src": "2440:341:119",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    65849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65849,
                      "mutability": "mutable",
                      "name": "_authorized",
                      "nameLocation": "2455:11:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 65881,
                      "src": "2450:16:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 65848,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2450:4:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65857,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 65853,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65803,
                        "src": "2505:5:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65854,
                        "name": "_permissionData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65841,
                        "src": "2512:15:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermissionData_$65771_calldata_ptr",
                          "typeString": "struct IAccount.PermissionData calldata"
                        }
                      },
                      {
                        "id": 65855,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65843,
                        "src": "2529:10:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_PermissionData_$65771_calldata_ptr",
                          "typeString": "struct IAccount.PermissionData calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 65850,
                          "name": "_permissionData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65841,
                          "src": "2469:15:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PermissionData_$65771_calldata_ptr",
                            "typeString": "struct IAccount.PermissionData calldata"
                          }
                        },
                        "id": 65851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "authController",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65761,
                        "src": "2469:30:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthController_$66053",
                          "typeString": "contract IAuthController"
                        }
                      },
                      "id": 65852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "auth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66043,
                      "src": "2469:35:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_address_$_t_struct$_PermissionData_$65771_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,struct IAccount.PermissionData memory,bytes memory) pure external returns (bool)"
                      }
                    },
                    "id": 65856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2469:71:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2450:90:119"
                },
                {
                  "condition": {
                    "id": 65859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2554:12:119",
                    "subExpression": {
                      "id": 65858,
                      "name": "_authorized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65849,
                      "src": "2555:11:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65864,
                  "nodeType": "IfStatement",
                  "src": "2550:64:119",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "4163636f756e743a3a617574683a20696e76616c696420617574686f72697a6172696f6e",
                          "id": 65861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2575:38:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_10a285d64d36794a89d1d340d4971ca156a93db1c69d810abba96c4ce58b4417",
                            "typeString": "literal_string \"Account::auth: invalid authorizarion\""
                          },
                          "value": "Account::auth: invalid authorizarion"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_10a285d64d36794a89d1d340d4971ca156a93db1c69d810abba96c4ce58b4417",
                            "typeString": "literal_string \"Account::auth: invalid authorizarion\""
                          }
                        ],
                        "id": 65860,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "2568:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 65862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2568:46:119",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 65863,
                    "nodeType": "ExpressionStatement",
                    "src": "2568:46:119"
                  }
                },
                {
                  "expression": {
                    "id": 65869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65865,
                      "name": "_permissionIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65805,
                      "src": "2624:20:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 65868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 65866,
                        "name": "_permissionIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65805,
                        "src": "2647:20:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 65867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2670:1:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2647:24:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2624:47:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65870,
                  "nodeType": "ExpressionStatement",
                  "src": "2624:47:119"
                },
                {
                  "expression": {
                    "id": 65873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65871,
                      "name": "_permissionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65846,
                      "src": "2681:13:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 65872,
                      "name": "_permissionIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65805,
                      "src": "2697:20:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2681:36:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65874,
                  "nodeType": "ExpressionStatement",
                  "src": "2681:36:119"
                },
                {
                  "expression": {
                    "id": 65879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 65875,
                        "name": "permissionData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65810,
                        "src": "2727:14:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PermissionData_$65771_storage_$",
                          "typeString": "mapping(uint256 => struct IAccount.PermissionData storage ref)"
                        }
                      },
                      "id": 65877,
                      "indexExpression": {
                        "id": 65876,
                        "name": "_permissionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65846,
                        "src": "2742:13:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2727:29:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PermissionData_$65771_storage",
                        "typeString": "struct IAccount.PermissionData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 65878,
                      "name": "_permissionData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65841,
                      "src": "2759:15:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PermissionData_$65771_calldata_ptr",
                        "typeString": "struct IAccount.PermissionData calldata"
                      }
                    },
                    "src": "2727:47:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PermissionData_$65771_storage",
                      "typeString": "struct IAccount.PermissionData storage ref"
                    }
                  },
                  "id": 65880,
                  "nodeType": "ExpressionStatement",
                  "src": "2727:47:119"
                }
              ]
            },
            "baseFunctions": [
              65782
            ],
            "functionSelector": "0998d8de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "auth",
            "nameLocation": "2306:4:119",
            "parameters": {
              "id": 65844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65841,
                  "mutability": "mutable",
                  "name": "_permissionData",
                  "nameLocation": "2335:15:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65882,
                  "src": "2311:39:119",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PermissionData_$65771_calldata_ptr",
                    "typeString": "struct IAccount.PermissionData"
                  },
                  "typeName": {
                    "id": 65840,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65839,
                      "name": "PermissionData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65771,
                      "src": "2311:14:119"
                    },
                    "referencedDeclaration": 65771,
                    "src": "2311:14:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PermissionData_$65771_storage_ptr",
                      "typeString": "struct IAccount.PermissionData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65843,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "2367:10:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65882,
                  "src": "2352:25:119",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65842,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2352:5:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2310:68:119"
            },
            "returnParameters": {
              "id": 65847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65846,
                  "mutability": "mutable",
                  "name": "_permissionId",
                  "nameLocation": "2421:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65882,
                  "src": "2413:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2413:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2412:23:119"
            },
            "scope": 65965,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65901,
            "nodeType": "FunctionDefinition",
            "src": "2787:181:119",
            "nodes": [],
            "body": {
              "id": 65900,
              "nodeType": "Block",
              "src": "2835:133:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 65891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 65888,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2853:3:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 65889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2853:10:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 65890,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65803,
                          "src": "2867:5:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2853:19:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e743a3a7265766f6b653a206f6e6c79206f776e65722063616e207265766f6b65",
                        "id": 65892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2874:40:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b22bfd31ef1773d17091c0ff3847ac68edaefceec9f6c21a0af21c1481629e49",
                          "typeString": "literal_string \"Account::revoke: only owner can revoke\""
                        },
                        "value": "Account::revoke: only owner can revoke"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b22bfd31ef1773d17091c0ff3847ac68edaefceec9f6c21a0af21c1481629e49",
                          "typeString": "literal_string \"Account::revoke: only owner can revoke\""
                        }
                      ],
                      "id": 65887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2845:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2845:70:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65894,
                  "nodeType": "ExpressionStatement",
                  "src": "2845:70:119"
                },
                {
                  "expression": {
                    "id": 65898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2925:36:119",
                    "subExpression": {
                      "baseExpression": {
                        "id": 65895,
                        "name": "permissionData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65810,
                        "src": "2932:14:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PermissionData_$65771_storage_$",
                          "typeString": "mapping(uint256 => struct IAccount.PermissionData storage ref)"
                        }
                      },
                      "id": 65897,
                      "indexExpression": {
                        "id": 65896,
                        "name": "_permissionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65884,
                        "src": "2947:13:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2932:29:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PermissionData_$65771_storage",
                        "typeString": "struct IAccount.PermissionData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65899,
                  "nodeType": "ExpressionStatement",
                  "src": "2925:36:119"
                }
              ]
            },
            "baseFunctions": [
              65798
            ],
            "functionSelector": "20c5429b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revoke",
            "nameLocation": "2796:6:119",
            "parameters": {
              "id": 65885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65884,
                  "mutability": "mutable",
                  "name": "_permissionId",
                  "nameLocation": "2811:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65901,
                  "src": "2803:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2803:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2802:23:119"
            },
            "returnParameters": {
              "id": 65886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2835:0:119"
            },
            "scope": 65965,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65964,
            "nodeType": "FunctionDefinition",
            "src": "2974:623:119",
            "nodes": [],
            "body": {
              "id": 65963,
              "nodeType": "Block",
              "src": "3080:517:119",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    65912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65912,
                      "mutability": "mutable",
                      "name": "_permissionData",
                      "nameLocation": "3112:15:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 65963,
                      "src": "3090:37:119",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PermissionData_$65771_memory_ptr",
                        "typeString": "struct IAccount.PermissionData"
                      },
                      "typeName": {
                        "id": 65911,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 65910,
                          "name": "PermissionData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65771,
                          "src": "3090:14:119"
                        },
                        "referencedDeclaration": 65771,
                        "src": "3090:14:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermissionData_$65771_storage_ptr",
                          "typeString": "struct IAccount.PermissionData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65916,
                  "initialValue": {
                    "baseExpression": {
                      "id": 65913,
                      "name": "permissionData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65810,
                      "src": "3130:14:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PermissionData_$65771_storage_$",
                        "typeString": "mapping(uint256 => struct IAccount.PermissionData storage ref)"
                      }
                    },
                    "id": 65915,
                    "indexExpression": {
                      "id": 65914,
                      "name": "_permissionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65903,
                      "src": "3145:13:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3130:29:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PermissionData_$65771_storage",
                      "typeString": "struct IAccount.PermissionData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3090:69:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 65922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 65918,
                            "name": "_permissionData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65912,
                            "src": "3177:15:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PermissionData_$65771_memory_ptr",
                              "typeString": "struct IAccount.PermissionData memory"
                            }
                          },
                          "id": 65919,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "client",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65763,
                          "src": "3177:22:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 65920,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3203:3:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 65921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3203:10:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3177:36:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e743a3a657865637574653a20696e76616c696420636c69656e74",
                        "id": 65923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3215:34:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a811b9b081b3bf027f2a3a5cc710e0bcd5d96a10efa47a78926dcc90feb27c4e",
                          "typeString": "literal_string \"Account::execute: invalid client\""
                        },
                        "value": "Account::execute: invalid client"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a811b9b081b3bf027f2a3a5cc710e0bcd5d96a10efa47a78926dcc90feb27c4e",
                          "typeString": "literal_string \"Account::execute: invalid client\""
                        }
                      ],
                      "id": 65917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3169:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3169:81:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65925,
                  "nodeType": "ExpressionStatement",
                  "src": "3169:81:119"
                },
                {
                  "assignments": [
                    65927
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65927,
                      "mutability": "mutable",
                      "name": "_allowed",
                      "nameLocation": "3265:8:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 65963,
                      "src": "3260:13:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 65926,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3260:4:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65935,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 65931,
                        "name": "_permissionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65903,
                        "src": "3325:13:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 65932,
                        "name": "_permissionData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65912,
                        "src": "3340:15:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermissionData_$65771_memory_ptr",
                          "typeString": "struct IAccount.PermissionData memory"
                        }
                      },
                      {
                        "id": 65933,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65905,
                        "src": "3357:5:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_PermissionData_$65771_memory_ptr",
                          "typeString": "struct IAccount.PermissionData memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 65928,
                          "name": "_permissionData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65912,
                          "src": "3276:15:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PermissionData_$65771_memory_ptr",
                            "typeString": "struct IAccount.PermissionData memory"
                          }
                        },
                        "id": 65929,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "limitChecker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65768,
                        "src": "3276:28:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILimitCheckerSystem_$70104",
                          "typeString": "contract ILimitCheckerSystem"
                        }
                      },
                      "id": 65930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkAndUpdateLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70095,
                      "src": "3276:48:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_PermissionData_$65771_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256,struct IAccount.PermissionData memory,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 65934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3276:87:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3260:103:119"
                },
                {
                  "condition": {
                    "id": 65937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3377:9:119",
                    "subExpression": {
                      "id": 65936,
                      "name": "_allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65927,
                      "src": "3378:8:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65942,
                  "nodeType": "IfStatement",
                  "src": "3373:54:119",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "4163636f756e743a3a657865637574653a206e6f7420616c6c6f776564",
                          "id": 65939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3395:31:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_85cf8565fc078a307dd24295b57d9eacbc42e5d4ce0c0076fb1ce02dfe5c1a27",
                            "typeString": "literal_string \"Account::execute: not allowed\""
                          },
                          "value": "Account::execute: not allowed"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_85cf8565fc078a307dd24295b57d9eacbc42e5d4ce0c0076fb1ce02dfe5c1a27",
                            "typeString": "literal_string \"Account::execute: not allowed\""
                          }
                        ],
                        "id": 65938,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "3388:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 65940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3388:39:119",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 65941,
                    "nodeType": "ExpressionStatement",
                    "src": "3388:39:119"
                  }
                },
                {
                  "assignments": [
                    65944
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65944,
                      "mutability": "mutable",
                      "name": "_success",
                      "nameLocation": "3443:8:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 65963,
                      "src": "3438:13:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 65943,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3438:4:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65945,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3438:13:119"
                },
                {
                  "expression": {
                    "id": 65954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 65946,
                          "name": "_success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65944,
                          "src": "3462:8:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 65947,
                          "name": "_returnData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65908,
                          "src": "3472:11:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 65948,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3461:23:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 65952,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65905,
                          "src": "3514:5:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 65949,
                            "name": "_permissionData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65912,
                            "src": "3487:15:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PermissionData_$65771_memory_ptr",
                              "typeString": "struct IAccount.PermissionData memory"
                            }
                          },
                          "id": 65950,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "world",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65765,
                          "src": "3487:21:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 65951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3487:26:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 65953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3487:33:119",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "3461:59:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65955,
                  "nodeType": "ExpressionStatement",
                  "src": "3461:59:119"
                },
                {
                  "condition": {
                    "id": 65957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3534:9:119",
                    "subExpression": {
                      "id": 65956,
                      "name": "_success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65944,
                      "src": "3535:8:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65962,
                  "nodeType": "IfStatement",
                  "src": "3530:60:119",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "4163636f756e743a3a657865637574653a20776f726c642063616c6c206661696c6564",
                          "id": 65959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3552:37:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b528312616023025edb33337cbfd22ec6ad78d12fd3ab0de0bef5bba36f071f8",
                            "typeString": "literal_string \"Account::execute: world call failed\""
                          },
                          "value": "Account::execute: world call failed"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_b528312616023025edb33337cbfd22ec6ad78d12fd3ab0de0bef5bba36f071f8",
                            "typeString": "literal_string \"Account::execute: world call failed\""
                          }
                        ],
                        "id": 65958,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "3545:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 65960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3545:45:119",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 65961,
                    "nodeType": "ExpressionStatement",
                    "src": "3545:45:119"
                  }
                }
              ]
            },
            "baseFunctions": [
              65792
            ],
            "functionSelector": "59efcb15",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "2983:7:119",
            "parameters": {
              "id": 65906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65903,
                  "mutability": "mutable",
                  "name": "_permissionId",
                  "nameLocation": "2999:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65964,
                  "src": "2991:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2991:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65905,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "3029:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65964,
                  "src": "3014:20:119",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65904,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3014:5:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2990:45:119"
            },
            "returnParameters": {
              "id": 65909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65908,
                  "mutability": "mutable",
                  "name": "_returnData",
                  "nameLocation": "3067:11:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 65964,
                  "src": "3054:24:119",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 65907,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3054:5:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3053:26:119"
            },
            "scope": 65965,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 65800,
              "name": "IAccount",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65799,
              "src": "1787:8:119"
            },
            "id": 65801,
            "nodeType": "InheritanceSpecifier",
            "src": "1787:8:119"
          }
        ],
        "canonicalName": "Account",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          65965,
          65799
        ],
        "name": "Account",
        "nameLocation": "1776:7:119",
        "scope": 65966,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 119
}